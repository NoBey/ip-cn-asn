name: Release

on:
  push:
    tags:
      - 'v*'

# Add explicit permissions for the GITHUB_TOKEN
permissions:
  contents: write
  packages: write
  actions: read

jobs:
  build:
    name: Build ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
            artifact_name: ip-cn-asn
            os_name: linux
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: ip-cn-asn
            os_name: macos-intel
          - os: macos-latest
            target: aarch64-apple-darwin
            artifact_name: ip-cn-asn
            os_name: macos-arm

    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}
      
      - name: Build
        run: |
          if [ "${{ matrix.os }}" = "ubuntu-latest" ]; then
            cargo build --release --target ${{ matrix.target }} --target-dir target-static
          else
            cargo build --release --target ${{ matrix.target }}
          fi
      
      - name: Get version
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
      
      - name: Package
        shell: bash
        run: |
          if [ "${{ matrix.os }}" = "ubuntu-latest" ]; then
            cd target-static/${{ matrix.target }}/release
          else
            cd target/${{ matrix.target }}/release
          fi
          tar -czf ../../../ip-cn-asn-${{ steps.get_version.outputs.VERSION }}-${{ matrix.os_name }}-${{ matrix.target }}.tar.gz ${{ matrix.artifact_name }}
          cd -
      
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ip-cn-asn-${{ matrix.os_name }}-${{ matrix.target }}
          path: ip-cn-asn-${{ steps.get_version.outputs.VERSION }}-${{ matrix.os_name }}-${{ matrix.target }}.tar.gz

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        
      - name: Set version
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
      
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          name: IP-CN-ASN ${{ env.VERSION }}
          draft: false
          prerelease: false
          generate_release_notes: true
          files: ip-cn-asn-*/*.tar.gz 